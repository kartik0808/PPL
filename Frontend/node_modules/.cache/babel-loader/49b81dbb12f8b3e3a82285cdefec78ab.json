{"ast":null,"code":"var _jsxFileName = \"/home/com-54/ppl/project (copy)/Frontend/src/Components/ImageUploadForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport \"./upload.css\";\nimport config from \"../../Config/config\";\nimport { useDispatch } from \"react-redux\";\nimport action from \"../../Action/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UploadImage(props) {\n  _s();\n\n  const [userReference, setUserReference] = React.useState({});\n  const [imageName, setImageName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [imageStatus, setImageStatus] = React.useState(\"\");\n  const [uploadedFile, setUploadedFile] = React.useState(\"\");\n  const [uploadImg, setUploadImg] = React.useState(true);\n  const dispatch = useDispatch();\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    axios.post(`${config.backendUrl}userdata`, {\n      email: localStorage.getItem(\"email\")\n    }).then(res => setUserReference(res.data)).then(console.log('This is the obj', res));\n    const formData = new FormData(); //formData.append(\"userInfo\", userReference._id);\n\n    formData.append(\"email\", localStorage.getItem(\"email\"));\n    formData.append(\"imageName\", imageName);\n    formData.append(\"description\", description);\n    formData.append(\"filename\", event.target[7].files[0].name);\n    formData.append(\"category\", category);\n    formData.append(\"date\", new Date());\n    formData.append(\"uploadedFile\", event.target[7].files[0]);\n    formData.append(\"likes\", 0);\n    axios.post(`${config.backendUrl}uploadimage`, formData).then(res => {\n      setImageStatus(res.data);\n      props.toggleValue();\n    }).then(setUploadImg(!uploadImg)).then(dispatch(action.uploadImage(uploadImg)));\n    var form = document.getElementById(\"uploadImage\");\n    form.reset();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      id: \"uploadImage\",\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label1\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"imageName\",\n        onChange: event => setImageName(event.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label1\",\n        children: \"Description(Max. 20 letters):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        maxLength: \"20\",\n        onChange: event => setDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label1\",\n        children: \"Categories:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animals\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"dog\",\n            name: \"categories\",\n            value: \"dog\",\n            onChange: event => setCategory(event.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dog\",\n            children: \"Dogs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animals\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"cat\",\n            name: \"categories\",\n            value: \"cat\",\n            onChange: event => setCategory(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cat\",\n            children: \"Cats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animals\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"categories\",\n            value: \"bird\",\n            onChange: event => setCategory(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bird\",\n            children: \"Birds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animals\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"categories\",\n            value: \"rabbit\",\n            onChange: event => setCategory(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"rabbit\",\n            children: \"Rabbit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animals\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"other\",\n            name: \"categories\",\n            value: \"other\",\n            onChange: event => setCategory(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"other\",\n            children: \"Other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"uploadedFile\",\n        onChange: event => setUploadedFile(event.target.files[0]),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), imageStatus === \"Image Uploaded\" ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"green\",\n        children: imageStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"red\",\n        children: imageStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"submit-image\",\n        type: \"submit\",\n        value: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UploadImage, \"AGrDqQW9RQ3jL07tCBJLC0HEkDg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = UploadImage;\nexport default UploadImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"sources":["/home/com-54/ppl/project (copy)/Frontend/src/Components/ImageUploadForm/index.js"],"names":["React","axios","config","useDispatch","action","UploadImage","props","userReference","setUserReference","useState","imageName","setImageName","description","setDescription","category","setCategory","imageStatus","setImageStatus","uploadedFile","setUploadedFile","uploadImg","setUploadImg","dispatch","handleSubmit","event","preventDefault","post","backendUrl","email","localStorage","getItem","then","res","data","console","log","formData","FormData","append","target","files","name","Date","toggleValue","uploadImage","form","document","getElementById","reset","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport \"./upload.css\";\nimport config from \"../../Config/config\";\nimport { useDispatch } from \"react-redux\";\nimport action from \"../../Action/action\";\n\nfunction UploadImage(props) {\n  const [userReference,setUserReference] = React.useState({});\n  const [imageName, setImageName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [imageStatus, setImageStatus] = React.useState(\"\");\n  const [uploadedFile, setUploadedFile] = React.useState(\"\");\n  const [uploadImg, setUploadImg] = React.useState(true);\n  const dispatch = useDispatch();\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    axios\n      .post(`${config.backendUrl}userdata`,{email:localStorage.getItem(\"email\")})\n      .then(res=> setUserReference(res.data))\n      .then(console.log('This is the obj',res))\n\n    const formData = new FormData();\n    //formData.append(\"userInfo\", userReference._id);\n    formData.append(\"email\", localStorage.getItem(\"email\"));\n    formData.append(\"imageName\", imageName);\n    formData.append(\"description\", description);\n    formData.append(\"filename\", event.target[7].files[0].name);\n    formData.append(\"category\", category);\n    formData.append(\"date\", new Date());\n    formData.append(\"uploadedFile\", event.target[7].files[0]);\n    formData.append(\"likes\", 0);\n\n    axios\n      .post(`${config.backendUrl}uploadimage`, formData)\n      .then((res) => {\n        setImageStatus(res.data);\n        props.toggleValue();\n      })\n      .then(setUploadImg(!uploadImg))\n      .then(dispatch(action.uploadImage(uploadImg)));\n\n    var form = document.getElementById(\"uploadImage\");\n    form.reset();\n  }\n  return (\n    <div className=\"upload-container\">\n      <form\n        onSubmit={handleSubmit}\n        id=\"uploadImage\"\n        encType=\"multipart/form-data\"\n      >\n        <label className=\"label1\">Name:</label>\n        <input\n          type=\"text\"\n          name=\"imageName\"\n          onChange={(event) => setImageName(event.target.value)}\n          required\n        />\n        <label className=\"label1\">Description(Max. 20 letters):</label>\n        <textarea\n          name=\"description\"\n          maxLength=\"20\"\n          onChange={(event) => setDescription(event.target.value)}\n        />\n        <label className=\"label1\">Categories:</label>\n        <div className=\"category\">\n          <div className=\"animals\">\n            <input\n              type=\"radio\"\n              id=\"dog\"\n              name=\"categories\"\n              value=\"dog\"\n              onChange={(event) => setCategory(event.target.value)}\n              required\n            />\n            <label htmlFor=\"dog\">Dogs</label>\n          </div>\n          <div className=\"animals\">\n            <input\n              type=\"radio\"\n              id=\"cat\"\n              name=\"categories\"\n              value=\"cat\"\n              onChange={(event) => setCategory(event.target.value)}\n            />\n            <label htmlFor=\"cat\">Cats</label>\n          </div>\n          <div className=\"animals\">\n            <input\n              type=\"radio\"\n              name=\"categories\"\n              value=\"bird\"\n              onChange={(event) => setCategory(event.target.value)}\n            />\n            <label htmlFor=\"bird\">Birds</label>\n          </div>\n          <div className=\"animals\">\n            <input\n              type=\"radio\"\n              name=\"categories\"\n              value=\"rabbit\"\n              onChange={(event) => setCategory(event.target.value)}\n            />\n            <label htmlFor=\"rabbit\">Rabbit</label>\n          </div>\n          <div className=\"animals\">\n            <input\n              type=\"radio\"\n              id=\"other\"\n              name=\"categories\"\n              value=\"other\"\n              onChange={(event) => setCategory(event.target.value)}\n            />\n            <label htmlFor=\"other\">Other</label>\n          </div>\n        </div>\n        <input\n          type=\"file\"\n          name=\"uploadedFile\"\n          onChange={(event) => setUploadedFile(event.target.files[0])}\n          required\n        />\n        {imageStatus === \"Image Uploaded\" ? (\n          <h4 className=\"green\">{imageStatus}</h4>\n        ) : (\n          <h4 className=\"red\">{imageStatus}</h4>\n        )}\n        <input id=\"submit-image\" type=\"submit\" value=\"submit\" />\n      </form>\n    </div>\n  );\n}\n\nexport default UploadImage;\n"]},"metadata":{},"sourceType":"module"}