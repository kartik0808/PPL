{"ast":null,"code":"var _jsxFileName = \"/home/com-54/ppl/project (copy)/Frontend/src/Components/ImageUploadForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./upload.css\";\nimport config from \"../../Config/config\";\nimport { useDispatch } from \"react-redux\";\nimport action from \"../../Action/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UploadImage(props) {\n  _s();\n\n  const token = \"Bearer \" + localStorage.getItem(\"token\");\n  const [userReference, setUserReference] = React.useState({});\n  const [imageName, setImageName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [imageStatus, setImageStatus] = React.useState(\"\");\n  const [uploadedFile, setUploadedFile] = React.useState(\"\");\n  const [uploadImg, setUploadImg] = React.useState(true);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    axios.post(`${config.backendUrl}userdata`, {\n      email: localStorage.getItem(\"email\")\n    }, {\n      headers: {\n        \"authorization\": token\n      }\n    }).then(res => {\n      console.log(res.data);\n      setUserReference(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(userReference);\n    const formData = new FormData();\n    formData.append(\"userInfo\", userReference._id);\n    formData.append(\"email\", localStorage.getItem(\"email\"));\n    formData.append(\"imageName\", imageName);\n    formData.append(\"description\", description);\n    formData.append(\"filename\", event.target[7].files[0].name);\n    formData.append(\"category\", category);\n    formData.append(\"date\", new Date());\n    formData.append(\"uploadedFile\", event.target[7].files[0]);\n    formData.append(\"likes\", 0);\n    axios.post(`${config.backendUrl}uploadimage`, formData, {\n      headers: {\n        \"authorization\": token\n      }\n    }).then(res => {\n      setImageStatus(res.data);\n      props.toggleValue();\n    }).then(setUploadImg(!uploadImg)).then(dispatch(action.uploadImage(uploadImg)));\n    var form = document.getElementById(\"uploadImage\");\n    form.reset();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      id: \"uploadImage\",\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label1\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"imageName\",\n        onChange: event => setImageName(event.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label1\",\n        children: \"Description(Max. 20 letters):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        maxLength: \"20\",\n        onChange: event => setDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label1\",\n        children: \"Categories:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animals\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"dog\",\n            name: \"categories\",\n            value: \"dog\",\n            onChange: event => setCategory(event.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dog\",\n            children: \"Dogs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animals\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"cat\",\n            name: \"categories\",\n            value: \"cat\",\n            onChange: event => setCategory(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cat\",\n            children: \"Cats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animals\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"categories\",\n            value: \"bird\",\n            onChange: event => setCategory(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bird\",\n            children: \"Birds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animals\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"categories\",\n            value: \"rabbit\",\n            onChange: event => setCategory(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"rabbit\",\n            children: \"Rabbit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animals\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"other\",\n            name: \"categories\",\n            value: \"other\",\n            onChange: event => setCategory(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"other\",\n            children: \"Other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"uploadedFile\",\n        onChange: event => setUploadedFile(event.target.files[0]),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), imageStatus === \"Image Uploaded\" ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"green\",\n        children: imageStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"red\",\n        children: imageStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"submit-image\",\n        type: \"submit\",\n        value: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UploadImage, \"Hg1VYD0FVZfCgfzC9eEfOH0pWoI=\", false, function () {\n  return [useDispatch];\n});\n\n_c = UploadImage;\nexport default UploadImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"sources":["/home/com-54/ppl/project (copy)/Frontend/src/Components/ImageUploadForm/index.js"],"names":["React","useEffect","axios","config","useDispatch","action","UploadImage","props","token","localStorage","getItem","userReference","setUserReference","useState","imageName","setImageName","description","setDescription","category","setCategory","imageStatus","setImageStatus","uploadedFile","setUploadedFile","uploadImg","setUploadImg","dispatch","post","backendUrl","email","headers","then","res","console","log","data","catch","err","handleSubmit","event","preventDefault","formData","FormData","append","_id","target","files","name","Date","toggleValue","uploadImage","form","document","getElementById","reset","value"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./upload.css\";\nimport config from \"../../Config/config\";\nimport { useDispatch } from \"react-redux\";\nimport action from \"../../Action/action\";\n\nfunction UploadImage(props) {\n  const token = \"Bearer \" + localStorage.getItem(\"token\");\n  const [userReference, setUserReference] = React.useState({});\n  const [imageName, setImageName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [imageStatus, setImageStatus] = React.useState(\"\");\n  const [uploadedFile, setUploadedFile] = React.useState(\"\");\n  const [uploadImg, setUploadImg] = React.useState(true);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    axios\n      .post(\n        `${config.backendUrl}userdata`,\n        {\n          email: localStorage.getItem(\"email\"),\n        },\n        {\n          headers: {\n            \"authorization\": token,\n          },\n        }\n      )\n      .then((res) => {\n        console.log(res.data);\n        setUserReference(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(userReference);\n    const formData = new FormData();\n    formData.append(\"userInfo\", userReference._id);\n    formData.append(\"email\", localStorage.getItem(\"email\"));\n    formData.append(\"imageName\", imageName);\n    formData.append(\"description\", description);\n    formData.append(\"filename\", event.target[7].files[0].name);\n    formData.append(\"category\", category);\n    formData.append(\"date\", new Date());\n    formData.append(\"uploadedFile\", event.target[7].files[0]);\n    formData.append(\"likes\", 0);\n\n    axios\n      .post(`${config.backendUrl}uploadimage`, formData, {\n        headers: { \"authorization\": token },\n      })\n      .then((res) => {\n        setImageStatus(res.data);\n        props.toggleValue();\n      })\n      .then(setUploadImg(!uploadImg))\n      .then(dispatch(action.uploadImage(uploadImg)));\n\n    var form = document.getElementById(\"uploadImage\");\n    form.reset();\n  }\n  return (\n    <div className=\"upload-container\">\n      <form\n        onSubmit={handleSubmit}\n        id=\"uploadImage\"\n        encType=\"multipart/form-data\"\n      >\n        <label className=\"label1\">Name:</label>\n        <input\n          type=\"text\"\n          name=\"imageName\"\n          onChange={(event) => setImageName(event.target.value)}\n          required\n        />\n        <label className=\"label1\">Description(Max. 20 letters):</label>\n        <textarea\n          name=\"description\"\n          maxLength=\"20\"\n          onChange={(event) => setDescription(event.target.value)}\n        />\n        <label className=\"label1\">Categories:</label>\n        <div className=\"category\">\n          <div className=\"animals\">\n            <input\n              type=\"radio\"\n              id=\"dog\"\n              name=\"categories\"\n              value=\"dog\"\n              onChange={(event) => setCategory(event.target.value)}\n              required\n            />\n            <label htmlFor=\"dog\">Dogs</label>\n          </div>\n          <div className=\"animals\">\n            <input\n              type=\"radio\"\n              id=\"cat\"\n              name=\"categories\"\n              value=\"cat\"\n              onChange={(event) => setCategory(event.target.value)}\n            />\n            <label htmlFor=\"cat\">Cats</label>\n          </div>\n          <div className=\"animals\">\n            <input\n              type=\"radio\"\n              name=\"categories\"\n              value=\"bird\"\n              onChange={(event) => setCategory(event.target.value)}\n            />\n            <label htmlFor=\"bird\">Birds</label>\n          </div>\n          <div className=\"animals\">\n            <input\n              type=\"radio\"\n              name=\"categories\"\n              value=\"rabbit\"\n              onChange={(event) => setCategory(event.target.value)}\n            />\n            <label htmlFor=\"rabbit\">Rabbit</label>\n          </div>\n          <div className=\"animals\">\n            <input\n              type=\"radio\"\n              id=\"other\"\n              name=\"categories\"\n              value=\"other\"\n              onChange={(event) => setCategory(event.target.value)}\n            />\n            <label htmlFor=\"other\">Other</label>\n          </div>\n        </div>\n        <input\n          type=\"file\"\n          name=\"uploadedFile\"\n          onChange={(event) => setUploadedFile(event.target.files[0])}\n          required\n        />\n        {imageStatus === \"Image Uploaded\" ? (\n          <h4 className=\"green\">{imageStatus}</h4>\n        ) : (\n          <h4 className=\"red\">{imageStatus}</h4>\n        )}\n        <input id=\"submit-image\" type=\"submit\" value=\"submit\" />\n      </form>\n    </div>\n  );\n}\n\nexport default UploadImage;\n"]},"metadata":{},"sourceType":"module"}