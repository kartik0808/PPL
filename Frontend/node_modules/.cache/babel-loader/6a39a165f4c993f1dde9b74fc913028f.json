{"ast":null,"code":"var _jsxFileName = \"/home/com-54/ppl/project (copy)/Frontend/src/Components/ResetPassword/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport config from '../../Config/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPassword(props) {\n  _s();\n\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\n  const isEnabled = newPassword === confirmNewPassword;\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    axios.post(`${config.backendUrl}updatepassword`, {\n      email: props.location.data,\n      password: newPassword\n    }).then(res => console.log(res.data));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content_rgt\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register_sec\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Enter New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter your new password\",\n            onChange: event => {\n              setNewPassword(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter your password again\",\n            onChange: event => {\n              setConfirmNewPassword(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), newPassword !== confirmNewPassword && confirmNewPassword.length > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red\",\n          children: \"Passwords do not match\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            defaultValue: \"Submit\",\n            disabled: !isEnabled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ResetPassword, \"vbNn0WZ8q1bvmzmpCM0ZE46/Bng=\");\n\n_c = ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/home/com-54/ppl/project (copy)/Frontend/src/Components/ResetPassword/index.js"],"names":["React","useState","axios","config","ResetPassword","props","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","isEnabled","handleSubmit","event","preventDefault","post","backendUrl","email","location","data","password","then","res","console","log","target","value","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC3C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAMS,SAAS,GAAGJ,WAAW,KAAKE,kBAAlC;;AAEA,WAASG,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAX,IAAAA,KAAK,CACFY,IADH,CACS,GAAEX,MAAM,CAACY,UAAW,gBAD7B,EAC8C;AAAEC,MAAAA,KAAK,EAAEX,KAAK,CAACY,QAAN,CAAeC,IAAxB;AAA6BC,MAAAA,QAAQ,EAACb;AAAtC,KAD9C,EAEGc,IAFH,CAESC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACH,IAAhB,CAFjB;AAGD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAEP,YAAhB;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,WAAW,EAAC,yBAFd;AAGE,YAAA,QAAQ,EAAGC,KAAD,IAAW;AACnBL,cAAAA,cAAc,CAACK,KAAK,CAACY,MAAN,CAAaC,KAAd,CAAd;AACD;AALH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,WAAW,EAAC,2BAFd;AAGE,YAAA,QAAQ,EAAGb,KAAD,IAAW;AACnBH,cAAAA,qBAAqB,CAACG,KAAK,CAACY,MAAN,CAAaC,KAAd,CAArB;AACD;AALH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,EAqBGnB,WAAW,KAAKE,kBAAhB,IACDA,kBAAkB,CAACkB,MAAnB,GAA4B,CAD3B,gBAEC;AAAM,UAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,GAGG,IAxBN,eAyBE;AAAA,iCACE;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,YAAY,EAAC,QAAlC;AAA2C,YAAA,QAAQ,EAAE,CAAChB;AAAtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GAhDuBN,a;;KAAAA,a","sourcesContent":["import React, { useState } from \"react\";\nimport axios from 'axios';\nimport config from '../../Config/config'\n\nexport default function ResetPassword(props) {\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\n  const isEnabled = newPassword === confirmNewPassword;\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    axios\n      .post(`${config.backendUrl}updatepassword`, { email: props.location.data,password:newPassword })\n      .then((res) => console.log(res.data));\n  }\n\n  return (\n    <div className=\"content_rgt\">\n      <div className=\"register_sec\">\n        <h1>Reset Password</h1>\n        <form onSubmit={handleSubmit}>\n          <li>\n            <span>Enter New Password</span>\n            <input\n              type=\"password\"\n              placeholder=\"Enter your new password\"\n              onChange={(event) => {\n                setNewPassword(event.target.value);\n              }}\n            />\n          </li>\n          <li>\n            <span>Confirm Password</span>\n            <input\n              type=\"password\"\n              placeholder=\"Enter your password again\"\n              onChange={(event) => {\n                setConfirmNewPassword(event.target.value);\n              }}\n            />\n          </li>\n          {newPassword !== confirmNewPassword &&\n          confirmNewPassword.length > 0 ? (\n            <span className=\"red\">Passwords do not match</span>\n          ) : null}\n          <li>\n            <input type=\"submit\" defaultValue=\"Submit\" disabled={!isEnabled} />\n          </li>\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}