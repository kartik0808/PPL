{"ast":null,"code":"var _jsxFileName = \"/home/com-54/ppl/project (copy)/Frontend/src/Components/ResetPassword/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport config from '../../Config/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPassword(props) {\n  _s();\n\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\n  const [loginMessage, setLoginMessage] = useState(false);\n  const isEnabled = newPassword === confirmNewPassword;\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    axios.post(`${config.backendUrl}updatepassword`, {\n      email: props.location.data,\n      password: newPassword\n    }).then(res => console.log(res.data)).then(() => setLoginMessage(true));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content_rgt\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register_sec\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Enter New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter your new password\",\n            onChange: event => {\n              setNewPassword(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter your password again\",\n            onChange: event => {\n              setConfirmNewPassword(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), newPassword !== confirmNewPassword && confirmNewPassword.length > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red\",\n          children: \"Passwords do not match\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this) : null, loginMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"green\",\n            children: \"Passwords changed succesfully!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Click \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 23\n            }, this), \" to login\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            defaultValue: \"Submit\",\n            disabled: !isEnabled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ResetPassword, \"lTbJhf9K9+90q+NM1Yy1MO9EoMk=\");\n\n_c = ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/home/com-54/ppl/project (copy)/Frontend/src/Components/ResetPassword/index.js"],"names":["React","useState","Link","axios","config","ResetPassword","props","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","loginMessage","setLoginMessage","isEnabled","handleSubmit","event","preventDefault","post","backendUrl","email","location","data","password","then","res","console","log","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport config from '../../Config/config'\n\nexport default function ResetPassword(props) {\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\n  const [loginMessage,setLoginMessage] = useState(false);\n  const isEnabled = newPassword === confirmNewPassword;\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    axios\n      .post(`${config.backendUrl}updatepassword`, { email: props.location.data,password:newPassword })\n      .then((res) => console.log(res.data))\n      .then(()=>setLoginMessage(true));\n  }\n\n  return (\n    <div className=\"content_rgt\">\n      <div className=\"register_sec\">\n        <h1>Reset Password</h1>\n        <form onSubmit={handleSubmit}>\n          <li>\n            <span>Enter New Password</span>\n            <input\n              type=\"password\"\n              placeholder=\"Enter your new password\"\n              onChange={(event) => {\n                setNewPassword(event.target.value);\n              }}\n            />\n          </li>\n          <li>\n            <span>Confirm Password</span>\n            <input\n              type=\"password\"\n              placeholder=\"Enter your password again\"\n              onChange={(event) => {\n                setConfirmNewPassword(event.target.value);\n              }}\n            />\n          </li>\n          {newPassword !== confirmNewPassword &&\n          confirmNewPassword.length > 0 ? (\n            <span className=\"red\">Passwords do not match</span>\n          ) : null}\n          {loginMessage ? (\n            <div>\n              <span className=\"green\">Passwords changed succesfully!</span>\n              <br />\n              <span>\n                Click <Link to=\"/login\">here</Link> to login\n              </span>\n            </div>\n          ) : null}\n          <li>\n            <input type=\"submit\" defaultValue=\"Submit\" disabled={!isEnabled} />\n          </li>\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}